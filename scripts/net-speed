#!/usr/bin/env bash

get_tmux_option() {
    local option=$1
    local default_value=$2
    local option_value="$(tmux show-option -gqv "$option")"

    if [[ -z "$option_value" ]]; then
        echo "$default_value"
    else
        echo "$option_value"
    fi
}

# $1: rx_bytes/tx_bytes
get_interfaces()
{
    local interfaces=($(get_tmux_option @net_speed_interfaces ""))

    if [[ -z "$interfaces" ]] ; then
        for interface in /sys/class/net/*; do
            interfaces+=(${interface##*/});
        done
    fi

    # Do not quote the variable. This way will handle trailing whitespace
    echo -n ${interfaces[@]}
}

# $1: rx_bytes/tx_bytes
get_bytes_now()
{
    local interfaces=($(get_interfaces))
    local sum=0
    for interface in ${interfaces[@]} ; do
        bytes=$(cat /sys/class/net/$interface/statistics/$1 2>/dev/null)
        let sum+=${bytes:=0}
    done
    echo $sum
}

# $1: tx_bytes/tx_bytes
read_bytes_cache()
{
    cat /tmp/tmux_net_speed.$1 2>/dev/null
}

# $1: bytes
# $2: tx_bytes/tx_bytes
write_bytes_cache()
{
    echo $1 > /tmp/tmux_net_speed.$2
}

# $1: rx_bytes/tx_bytes
get_speed()
{
    local cache=$(read_bytes_cache $1)
    local new=$(get_bytes_now $1)
    local old=${cache:=$new}
    local diff=$(($new - $old))
    local speed=$(numfmt --to=iec --padding=7 $diff)
    [[ $diff -lt 1024 ]] && speed+="B"
    echo ${speed}/s
    write_bytes_cache $new $1
}

# $1: tx_bytes/tx_bytes
# $2: format
main()
{
    speed=$(get_speed $1)
    format=$2
    local format=${format:="%7s"}
    printf "$format" $speed
}

main $@
